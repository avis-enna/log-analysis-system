version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: log-analysis-postgres
    environment:
      POSTGRES_DB: log_analysis_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - log-analysis-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: log-analysis-redis
    ports:
      - "6379:6379"
    networks:
      - log-analysis-network
    restart: unless-stopped

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: log-analysis-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - log-analysis-network
    restart: unless-stopped

  # Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: log-analysis-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - log-analysis-network
    restart: unless-stopped

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: log-analysis-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    ports:
      - "9092:9092"
    networks:
      - log-analysis-network
    restart: unless-stopped

  # Log Analysis Application
  app:
    build: ./backend
    container_name: log-analysis-app
    depends_on:
      - postgres
      - redis
      - elasticsearch
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/log_analysis_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8081:8080"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - log-analysis-network
    restart: unless-stopped

  # Prometheus (for monitoring)
  prometheus:
    image: prom/prometheus:latest
    container_name: log-analysis-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - log-analysis-network
    restart: unless-stopped

  # Grafana (for dashboards)
  grafana:
    image: grafana/grafana:latest
    container_name: log-analysis-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "4000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - log-analysis-network
    restart: unless-stopped

volumes:
  postgres_data:
  elasticsearch_data:
  grafana_data:

networks:
  log-analysis-network:
    driver: bridge
